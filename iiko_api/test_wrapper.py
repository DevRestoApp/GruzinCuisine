#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã iiko API –æ–±—ë—Ä—Ç–∫–∏
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from iiko_api_wrapper import (
    set_api_key, 
    set_organization_id, 
    check_connection,
    get_organizations,
    get_api_info,
    get_error_description
)

def test_basic_functionality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ ===")
    
    # –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ API –∫–ª—é—á–∞
    try:
        set_api_key("test_key_123")
        print("‚úì API –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ API –∫–ª—é—á–∞: {e}")
    
    # –¢–µ—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    try:
        set_organization_id("test_org_123")
        print("‚úì ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –æ—à–∏–±–æ–∫
    try:
        error_400 = get_error_description(400)
        error_404 = get_error_description(404)
        print(f"‚úì –û–ø–∏—Å–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ø–æ–ª—É—á–µ–Ω—ã: 400 - {error_400}, 404 - {error_404}")
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –æ—à–∏–±–æ–∫: {e}")

def test_api_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API ===")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if check_connection():
            print("‚úì –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å API —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± API
            try:
                api_info = get_api_info()
                print(f"‚úì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API –ø–æ–ª—É—á–µ–Ω–∞: {api_info}")
            except Exception as e:
                print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± API: {e}")
                
        else:
            print("‚úó –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å API –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")

def test_organizations():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º–∏ ===")
    
    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
        organizations = get_organizations()
        print(f"‚úì –ü–æ–ª—É—á–µ–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {len(organizations)}")
        
        if organizations:
            # –í—ã–≤–æ–¥ –ø–µ—Ä–≤–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            first_org = organizations[0]
            print(f"  –ü–µ—Ä–≤–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {first_org.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} (ID: {first_org.get('id', 'N/A')})")
            
    except Exception as e:
        print(f"‚úó –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è iiko API –æ–±—ë—Ä—Ç–∫–∏")
    print("=" * 50)
    
    # –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
    test_basic_functionality()
    
    # –¢–µ—Å—Ç—ã API (—Ç—Ä–µ–±—É—é—Ç –≤–∞–ª–∏–¥–Ω—ã–π API –∫–ª—é—á)
    print("\n‚ö†Ô∏è  –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —Ñ—É–Ω–∫—Ü–∏–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–π API –∫–ª—é—á")
    print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤ –∫–æ–¥–µ")
    
    # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ API –∫–ª—é—á–∞:
    # test_api_connection()
    # test_organizations()
    
    print("\n" + "=" * 50)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()
